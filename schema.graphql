type ChargeCode {
    id: ID!
    name: String!
    code: String!
    description: String
    expired: Boolean!
}

enum DayMode {
    NORMAL
    HOL_PUBLIC
    HOL_PERSONAL
    HOL_RDO
    HOL_ANNUAL
}

type Mutation {
    createChargeCode(name: String!, code: String!, description: String, expired: Boolean = false): ChargeCode
    updateChargeCode(id: ID!, name: String, code: String, description: String, expired: Boolean): ChargeCode
    deleteChargeCode(id: ID!): Boolean
    createTimeCharge(timeSlot: Int!, chargeCodeId: ID!, trackedDayID: ID!, chargeCodeAppearance: Int, totalChargeCodesForSlot: Int): TimeCharge!
    updateTimeCharge(id: ID!, chargeCodeAppearance: Int, totalChargeCodesForSlot: Int): TimeCharge!
    createTrackedDay(date: Float!, mode: String): TrackedDay
    deleteTrackedDay(id: ID!): Boolean
    updateTrackedDay(id: ID!, mode: DayMode, date: Float, trackedTaskIds: [String!]): TrackedDay
    createTrackedTask(trackedDayId: ID!, notes: String): TrackedTask!
    updateTrackedTask(id: ID!, notes: String, chargeCodeIds: [ID!], timeSlots: [Int!]): TrackedTask!
    deleteTrackedTask(id: ID): Boolean
    createUser(username: String!, password: String!): User
    deleteUser(username: String!): Boolean
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type Query {
    chargeCodes(ids: [ID!], name: String, code: String, description: String, expired: Boolean): [ChargeCode!]
    timeCharges(trackedDayId: String, timeSlot: Int, chargeCodeId: ID): [TimeCharge!]
    timeChargeTotals(weekOfYear: WeekOfYear): [TimeChargeTotal!]
    trackedDays(id: ID): [TrackedDay!]
    trackedDaysPaginated(after: String, first: Int): TrackedDayConnection
    trackedTasks(trackedDayId: ID): [TrackedTask!]
    users(username: String): [User!]
}

type Subscription {
    timeChargeTotalChanged(userId: String!): TimeChargeTotal
}

type TimeCharge {
    id: ID!
    timeSlot: Int

    """The number of times this charge code appears at this timeslot"""
    chargeCodeAppearance: Int

    """
    The number of chargecodes that appear across all tracked tasks at this timeslot
    """
    totalChargeCodesForSlot: Int
    trackedDay: TrackedDay
    chargeCode: ChargeCode
}

"""
This represents a single ChargeCode for a Tracked Day and the value for the timesheet
"""
type TimeChargeTotal {
    id: ID!
    value: Float
    trackedDay: TrackedDay
    chargeCode: ChargeCode
    user: User
}

""" each tracked day will have a max of 240 timeslots (if you work 24hrs!)
"""
type TrackedDay {
    id: ID!
    date: Float!
    week: Int!
    year: Int!
    mode: DayMode!
    user: User
    trackedTasks: [TrackedTask!]
    timeCharges: [TimeCharge!]
    timeChargeTotals: [TimeChargeTotal!]
}

"""
the @connection directive is meant to work but it clashes with dgs-codegen plugin (not supported yet, but there's
an untouched PR...). For now, implementing the types manually here
"""
type TrackedDayConnection {
    pageInfo: PageInfo!
    edges: [TrackedDayEdge!]
}

type TrackedDayEdge {
    cursor: String!
    node: TrackedDay
}

type TrackedTask {
    id: ID!
    notes: String
    timeSlots: [Int!]
    trackedDay: TrackedDay
    chargeCodes: [ChargeCode!]
}

type User {
    id: ID!
    username: String!
    trackedDays: [TrackedDay!]
}

input WeekOfYear {
    week: Int
    year: Int!
}

